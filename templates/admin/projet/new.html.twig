{% extends 'admin/baseadmin.html.twig' %}

{% block title %}New Projet{% endblock %}
{% block stylesheet %}
    {{ encore_entry_link_tags('loader') }}
{% endblock %}
{% block body %}
<style>
.selectize-dropdown {
  color: white;
  background-color: black !important;
}

.selectize-dropdown,
.selectize-input,
.selectize-input input {
    font-family: inherit;
    color: white !important;
}

/* Main */

.selectize-input {
  border: 1px solid white; /* Why isn't this red? */
  padding: 8px 8px;
  width: 100%;
  background-color: #262626 !important;
  overflow: hidden;
  position: relative;
  z-index: 1;
}

/* Main input */

.selectize-input > input {
  border: 0;
  margin: 0;
  padding: 0;
}

/* Main input outline */

.selectize-input > input:focus {
  outline: none;
}

/* Dropdown */

.selectize-dropdown {
  position: absolute;
  z-index: 10;
  border: 1px solid #000; /* Why isn't this black? */
  border-top: 0 none;
}

/* Option cursor */

.selectize-dropdown [data-selectable] {
  cursor: pointer;
}

/* Option highlight background */

.selectize-dropdown [data-selectable] .highlight {
  background: #ccc;
}

/* Option and group label padding */
.selectize-dropdown [data-selectable],
.selectize-dropdown .optgroup-header {
  padding: 5px 8px;
}

/* Group label */

.selectize-dropdown .optgroup-header {
  padding-top: 7px;
  font-weight: bold;
  cursor: default;
    color: black;
}

/* Option hover */

.selectize-dropdown .active {
  background-color: #ccc;
  color: white;
}

/* Structure */

.selectize-dropdown-content {
  overflow-y: auto;
  overflow-x: hidden;
  max-height: 200px;
}

/* Main cursor */
.selectize-control.single .selectize-input,
.selectize-control.single .selectize-input input {
  cursor: pointer;
}

/* Main cursor after init */
.selectize-control.single .selectize-input.input-active,
.selectize-control.single .selectize-input.input-active input {
  cursor: text;
}

/* Dropdown arrows */

.selectize-control.single .selectize-input:after {
    /* Use sprite instead */
}
.selectize-control.single .selectize-input.dropdown-active:after {
    /* Use sprite instead */
}

/* Main outer border */

.selectize-control.single .selectize-input,
.selectize-dropdown.single {
  border-color: white;
}

</style>
<div id="loading" class="loading"></div>

    {% if fromclient %}
        <a class="btn btn-primary ms-4" href="{{ path('admin_projet_fromClient_index', {'id': id}) }}"><i class="fas fa-arrow-left"></i></a>
    {% else %}
        <a class="btn btn-primary ms-4" href="{{ path('admin_projet_index') }}"><i class="fas fa-arrow-left"></i></a>
    {% endif %}

        <div id="fromclient" data-from="{{ fromclient }}" data-id="{{ id }}" class="card text-center container bg-dark text-light">
            <div class="card-header">
                <h5>Ajout d'un client</h5>
            </div>
            <div class="card-body">
                    <form id="form" action="{{ path('admin_projet_newupload') }}">
                    <!-- 2 column grid layout with text inputs for the first and last names -->
                        <div class="row mb-4">
                            <div class="col">
                            <div class="form-outline form-white">
                                <input name="projet" type="text" id="projet" class="form-control" />
                                <label class="form-label" for="form6Example1">Nom du projet</label>
                            </div>
                            </div>
                            <div class="col">
                                <div class="input-group">
                                <input name="logo" type="file" class="form-control bg-dark text-light" id="logo">
                                <label class="input-group-text bg-dark text-light" for="inputGroupFile02">Logo</label>
                                </div>
                            </div>
                            <div class="col">
                                <div data-client="{{clients}}" name="client" id="select-beast3">
                                </div>
                            </div>
                        </div>

                        <div class="row mb-4 d-flex">
                            <div class="col">
                                <div data-secteur="{{secteurs}}" name="secteur" id="select-beast2">
                                </div>
                            </div>
                            <div class="col">
                                <div class="form-outline form-white" style="margin-top: 2.5px;">
                                    <input name="titremission" type="text" id="missionp" class="form-control" required/>
                                    <label class="form-label" for="form6Example3">Mission principale*</label>
                                </div>
                            </div>
                            <div class="col">
                                <div data-all="{{categories|json_encode(constant('JSON_PRETTY_PRINT'))}}" name="categorie" id="select-beast">
                                </div>
                            </div>
                        </div>

                        <!-- Text input -->
                        <div class="form-outline mb-4">
                            <div id="editormission"></div>
                        </div>

                        <div class="row mb-4">
                            <div class="col-4">
                                <div class="input-group">                                
                                <label class="input-group-text bg-dark text-light" for="debut">Début</label>
                                <input name='debut' type="date" class="form-control bg-dark text-light" id="debut">                                
                                </div>
                            </div>
                            <div class="col-4">
                                <div class="form-outline form-white">                                
                                <input name="duree" type="text" id="duree" class="form-control" />
                                <label class="form-label" for="duree">Durée total</label>                               
                                </div>
                            </div>
                            <div class="col-4">
                                <div class="input-group">
                                <input name='fin' type="date" class="form-control bg-dark text-light" id="fin">
                                <label class="input-group-text bg-dark text-light" for="fin">Fin</label>
                                </div>
                            </div>
                        </div>

                        <div class="row mb-4">
                            <button type="button" class="btn btn-secondary col mx-4" data-mdb-toggle="modal" data-mdb-target="#exampleModal" id="mbtndemande">
                                Une demande
                            </button>

                            <button type="button" class="btn btn-secondary col mx-4" data-mdb-toggle="modal" data-mdb-target="#exampleModal2" id="mbtndefi">
                                Un defi
                            </button>

                            <button type="button" class="btn btn-secondary col mx-4" data-mdb-toggle="modal" data-mdb-target="#exampleModal3" id="mbtnaction">
                                Une action
                            </button>

                            <button type="button" class="btn btn-secondary col mx-4" data-mdb-toggle="modal" data-mdb-target="#exampleModal4" id="mbtnfocus">
                                Focus
                            </button>

                            <button type="button" class="btn btn-secondary col mx-4" data-mdb-toggle="modal" data-mdb-target="#exampleModal5" id="mbtntemoi">
                                Temoignage
                            </button>
                        </div>
                      

                        <input type="textarea" id="focusfake" hidden/>
                    <!-- Submit button -->
                    <button id="submit" type="submit" class="btn btn-primary btn-block mb-4">Ajouter</button>
                </form>
            </div>
        </div>




        <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">

                    <div id="editordemande">
                    </div>

                </div>
            </div>
        </div>

        <div class="modal fade" id="exampleModal3" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">

                    <div id="editoraction">
                    </div>

                </div>
            </div>
        </div>

        <div class="modal fade" id="exampleModal2" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">

                    <div id="editordefi">
                    </div>

                </div>
            </div>
        </div>
        <div class="modal fade" id="exampleModal4" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">

                    <div id="editorfocus">
                    </div>

                </div>
            </div>
        </div>
        <div class="modal fade" id="exampleModal5" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">

                    <div id="editortemoi">
                    </div>

                </div>
            </div>
        </div>

        <script>
        // init,configure dropzone
        </script>
        
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js" integrity="sha512-894YE6QWD5I59HgZOGReFYm4dnWc1Qt5NtvYSaNcOP+u1T9qYdvdihz0PPSiiqn/+/3e7Jo4EaG7TubfWGUrMQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>    
        <script src="https://cdnjs.cloudflare.com/ajax/libs/microplugin/0.0.3/microplugin.min.js" integrity="sha512-7amIsiQ/hxbdPNawBZwmWBWPiwQRNEJlxTj6eVO+xmWd71fs79Iydr4rYARHwDf0rKHpysFxWbj64fjPRHbqfA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/sifter/0.5.4/sifter.min.js" integrity="sha512-B60IUvYpG4cibCeQ30J8k/+qtN+fxKAIENb3DL2DVdzIt76IDIynAt92chPEwlCuKejOt//+OZL61i1xsvCIDQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/selectize.js/0.13.6/js/selectize.min.js" integrity="sha512-DBOconMAY06o4R79zeXKKM3h/g5pca647Eabb+6viK4dRpiMOlZFS4gsbukTbHo+ppdKx4yr+/0m2JnpeAIrSw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
        <script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
        
        <script>

        //INFO stock les données du client pour la redirection
        let idClient = $("#fromclient").attr("data-id")
        let fromclient = $("#fromclient").attr("data-from")
        let allcat = $("#select-beast").attr("data-all")

        let data = JSON.parse(allcat); 
        let newOptions = []
            for (let i = 0; i < data.length; i++) {
                let option = {
                    text: data[i].categorie,
                    value: data[i].id
                }
                newOptions.push(option)
            }

            let select = $("#select-beast").selectize({
                create: false,
                sortField: "text",
                options: newOptions,
                addPrecedence: false,
                maxItems: 2,
                required: true,
                placeholder: 'Click here to select a categorie...',
                onChange(value) {
                    categorie = value 
                    console.log(categorie)
                },
            });  

            let secteur = ""
            let datas = JSON.parse($('#select-beast2').attr('data-secteur'));
            let newOptionsecteur = []
            for (let i = 0; i < datas.length; i++) {
                let option = {
                    text: datas[i].secteur,
                    value: datas[i].id
                }
                newOptionsecteur.push(option)
            }

            $("#select-beast2").selectize({
                create: false,
                sortField: "text",
                options: newOptionsecteur,
                addPrecedence: false,
                maxItems: 1,
                required: true,
                placeholder: 'Click here to select a secteur...',
                onChange(value) {
                    console.log(value)
                    secteur = value 
                },
            });

            let client = ""
            let datac = JSON.parse($('#select-beast3').attr('data-client'));
            let newOptionclient = []
            for (let i = 0; i < datac.length; i++) {
                let option = {
                    text: datac[i].nomClient,
                    value: datac[i].id
                }
                newOptionclient.push(option)
            }

            $("#select-beast3").selectize({
                create: false,
                sortField: "text",
                options: newOptionclient,
                addPrecedence: false,
                maxItems: 1,
                required: true,
                placeholder: 'Click here to select a secteur...',
                onChange(value) {
                    console.log(value)
                    client = value 
                },
            });

            var quill = new Quill('#editormission', {
                theme: 'snow',
                placeholder: 'Description...',
            });

            var demandemodal = new Quill('#editordemande', {
                theme: 'snow',
                placeholder: 'Une Histoire...',
            });
            demandemodal.on('text-change', function() {
                if (demandemodal["editor"]["delta"]['ops'][0]["insert"].length > 1)
                    document.getElementById('mbtndemande').className = "btn btn-success col mx-4";
                else
                    document.getElementById('mbtndemande').className = "btn btn-secondary col mx-4";
            });
            var actionemodal = new Quill('#editoraction', {
                theme: 'snow',
                placeholder: 'Une Reponse...',
            });
            actionemodal.on('text-change', function() {
                if (actionemodal["editor"]["delta"]['ops'][0]["insert"].length > 1)
                    document.getElementById('mbtnaction').className = "btn btn-success col mx-4";
                else
                    document.getElementById('mbtnaction').className = "btn btn-secondary col mx-4";
            });
            var defiemodal = new Quill('#editordefi', {
                theme: 'snow',
                placeholder: 'Un Enjeu...',
            });
            defiemodal.on('text-change', function() {
                if (defiemodal["editor"]["delta"]['ops'][0]["insert"].length > 1)
                    document.getElementById('mbtndefi').className = "btn btn-success col mx-4";
                else
                    document.getElementById('mbtndefi').className = "btn btn-secondary col mx-4";
            });
            var focusemodal = new Quill('#editorfocus', {
                theme: 'snow',
                placeholder: 'Element de precision',
            });
            focusemodal.on('text-change', function() {
                if (focusemodal["editor"]["delta"]['ops'][0]["insert"].length > 1)
                    document.getElementById('mbtnfocus').className = "btn btn-success col mx-4";
                else
                    document.getElementById('mbtnfocus').className = "btn btn-secondary col mx-4";
            });
            var temoimodal = new Quill('#editortemoi', {
                theme: 'snow',
                placeholder: 'Temoignage...',
            });
            temoimodal.on('text-change', function() {
                if (temoimodal["editor"]["delta"]['ops'][0]["insert"].length > 1)
                    document.getElementById('mbtntemoi').className = "btn btn-success col mx-4";
                else
                    document.getElementById('mbtntemoi').className = "btn btn-secondary col mx-4";
            });

            $("#form").on("submit", function(e){
                e.preventDefault();
                Swal.fire({
                    title: 'Envoi en cour',
                    didOpen: () => {
                        Swal.showLoading()
                    }
                })

                var data = {
                    projet: $('#projet').val(),
                    client: client,
                    secteur: secteur,
                    missionp: $('#missionp').val(),
                    description: quill.root.innerHTML,
                    demandetext: demandemodal.root.innerHTML,
                    actiontext: actionemodal.root.innerHTML,
                    defitext: defiemodal.root.innerHTML,
                    focustext: focusemodal.root.innerHTML,
                    temoignagetext: temoimodal.root.innerHTML,
                    categorie: categorie,
                    duree: $('#duree').val(),
                    debut: $('#debut').val(),
                    fin: $('#fin').val(),
                };

                var formData = new FormData();
                formData.append("data", JSON.stringify(data));

                var logo = $('#logo').prop('files')[0];   
                if(logo)
                    formData.append('logo', logo);

                $.ajax({
                    type: "POST",
                    url: "{{ path('admin_projet_newupload') }}",
                    data: formData,
                    contentType: 'multipart/form-data',
                    cache: false,
                    contentType: false,
                    processData: false,
                success: () => {
                    let timerInterval
                    Swal.fire({
                        title: 'Ajout réussi!',
                        icon: 'success',
                        html: 'redirection dans <b></b> milliseconds.',
                        timer: 2000,
                        timerProgressBar: true,
                    didOpen: () => {
                            const b = Swal.getHtmlContainer().querySelector('b')
                            timerInterval = setInterval(() => {
                            b.textContent = Swal.getTimerLeft()
                            }, 100)
                        },
                    willClose: () => {
                        clearInterval(timerInterval)
                    }}).then((result) => {
                        if( fromclient ){
                            if (result.dismiss === Swal.DismissReason.timer) {
                                window.location.replace("/admin/projet/fromclient/"+idClient);
                            }
                        }else{
                            if (result.dismiss === Swal.DismissReason.timer) {
                                window.location.replace("{{ path('admin_projet_index') }}");
                            }
                        }
                    })
                },
                error: (data) => {
                    Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Something went wrong!',   
                    })
                }
            });
                
        })
        </script>


{% endblock %}
{% block js %}
    {{ encore_entry_script_tags('loaderjs') }}
{% endblock %}